###服务名称(服务注册到eureka名称)  
spring:
  application:
    name: springCloud2-provider
###服务启动端口号 
server:
  port: 8200
###配置appid
app:
  id: springCloud2-provider
###springBoot集成apollo客户端
apollo:
  bootstrap:
    enabled: true
    namespaces: application,jfykptjg.springCloud.hystrix
#    eagerLoad: 
#      enabled: true #工程启动时参数可使用
#其他参数请在apollo中查看：http://192.168.1.111:8070/signin#/logout ，apollo,admin
  #profiles: 
  #  active: dev #设置环境配置文件--多环境配置，apollo使用C:\opt\settings\server.properties的配置代替
#feign:
#  hystrix:
#    enabled: true
# hystrix禁止服务超时时间
#hystrix:  
# command: 
#   default: 
#      execution: 
#       timeout: 
#        enabled: false

###服务名称(服务注册到eureka名称)  

###服务注册到eureka地址
#eureka:
#  client:
#    service-url:
#           defaultZone: http://192.168.1.111:8080/eureka
                        #http://admin:123456@127.0.0.1:8100/eureka
    #因为该应用为注册中心，不会注册自己
    #register-with-eureka: false
    #是否需要从eureka上获取注册信息
    #fetch-registry: false
    #表示eureka client间隔多久去拉取服务注册信息，默认为30秒，对于api-gateway，如果要迅速获取服务注册状态，可以缩小该值，比如5秒
    #registry-fetch-interval-seconds: 30
    # 心跳检测检测与续约时间
  # 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
#  instance:
    #Eureka客户端向服务端发送心跳的时间间隔，单位为秒（客户端告诉服务端自己会按照该规则）  
#    lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒，超过则剔除（客户端告诉服务端按照此规则等待自己）
#    lease-expiration-duration-in-seconds: 2    
    
#测试获取properties中配置的参数
#memberName: carson
